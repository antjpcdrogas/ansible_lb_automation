
 - name: Start ip update
   debug:
    msg: "IP update starting on service {{item.key}}."




 
 - name: get first IP and remove it from file.
   script: remove_ip_ffile.py "{{ playbook_dir + '/files/ips.txt'}}"
   register: register_py
   failed_when: register_py.rc > 1


 


 - name: Unbind service "{{item.key}} from Loadbalancer {{name_lb}}."
   uri:
     url: "{{API_ADDR}}/lb/{{name_lb}}/unbind/{{item.key}}"
     method: PUT    
     status_code: 200
     headers:
       Content-Type: "application/json"
   register: register_unbind_svctolb


 - name: "Delete service {{item.key}}."                         
   uri:
     url: "{{API_ADDR}}/service/{{item.key}}"
     method: DELETE
     
     status_code: 200
     headers:
       Content-Type: "application/json"
   register: register_delete_services
   
 

 - name: Create Service {{item.key}} with new ip={{register_py.stdout}}.
   uri:
     url: "{{API_ADDR}}/service"
     method: POST
     body_format: json
     body: '{"name":"{{item.value.name}}","ip":"{{register_py.stdout | trim}}","port":"{{item.value.port}}"}'  
     status_code: 200
   register: register_add_services
 


 - name: Bind service "{{item.key}} to monitor {{item.value.binds[0]}}.
   uri:
     url: "{{API_ADDR}}/service/{{item.key}}/bind/{{item.value.binds[0]}}"
     method: PUT
    
     status_code: 200
     headers:
       Content-Type: "application/json"
   register: register_bind_svctolb


 - name: Bind service {{item.key}} to temporary LoadBalancer {{name_temp_lb}}.
   uri:
     url: "{{API_ADDR}}/lb/{{name_temp_lb}}/bind/{{item.key}}"
     method: PUT
    
     status_code: 200
     headers:
       Content-Type: "application/json"
   register: register_bind_svctolb

  
#### At this point a playbook or task for be included to perform QA tests on the new service recently added to the temporary LB


 - name: Unbind service "{{item.key}} from  Temporary Loadbalancer {{name_temp_lb}}"
   uri:
     url: "{{API_ADDR}}/lb/{{name_temp_lb}}/unbind/{{item.key}}"
     method: PUT
    
     status_code: 200
     headers:
       Content-Type: "application/json"
   register: register_unbind2_svctolb


 - name: Bind ( again) service {{item.key}} to Production LoadBalancer {{name_lb}}.
   uri:
     url: "{{API_ADDR}}/lb/{{name_lb}}/bind/{{item.key}}"
     method: PUT
    
     status_code: 200
     headers:
       Content-Type: "application/json"
   register: register_bind_svctolb






 - block:
   - name: Delete temporary LoadBalancer.
     uri:
       url: "{{API_ADDR}}/lb/{{name_temp_lb}}"
       method: DELETE
     
       status_code: 200
       headers:
         Content-Type: "application/json"
     register: register_delete_temp_lb
   - name: No more IPs 
     debug: 
       msg: "All IPs used."
   - meta: end_play
   when: register_py.rc == 1








 





  




